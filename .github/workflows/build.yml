name: build

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  plan:
    uses: ./.github/workflows/terraform-plan.yml
    with:
      directory: ./test/terraform
      terraform_version: "1.12.2"
      runs-on: kubernetes-runner
      debug: true
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_APP_ID: "1552622"
      GITHUB_APP_INSTALLATION_ID: "74918728"
      GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}

  verify-plan:
    runs-on: kubernetes-runner
    needs: plan
    steps:
    - name: verify-terraform-plan
      run: |
        if [ "${{ needs.plan.outputs.plan_outcome }}" != "success" ]; then
          echo "Terraform plan failed."
          exit 1
        fi
        echo "Terraform plan succeeded."
        echo "${{ needs.plan.outputs.plan_output }}"

  apply:
    uses: ./.github/workflows/terraform-apply.yml
    with:
      directory: ./test/terraform
      terraform_version: "1.12.2"
      environment: ''
      runs-on: kubernetes-runner
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_APP_ID: "1552622"
      GITHUB_APP_INSTALLATION_ID: "74918728"
      GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}

  verify-apply:
    runs-on: kubernetes-runner
    needs: apply
    steps:
    - name: verify-terraform-apply
      run: |
        if [ "${{ needs.apply.outputs.apply_outcome }}" != "success" ]; then
          echo "Terraform apply failed."
          exit 1
        fi
        echo "Terraform apply succeeded."
        echo "${{ needs.apply.outputs.apply_output }}"

  test-encrypted-artifact-upload-download:
    runs-on: kubernetes-runner
    steps:
    - name: Checkout Repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - name: Setup age
      uses: alessiodionisi/setup-age-action@82b9aea163ade7fe23441552a514cf666b214077 # v1.3.0
    - name: Prepare plaintext and age key pair
      id: age-keys
      run: |
        set -euo pipefail
        cat > plain.txt << 'EOF'
        sample: secret
        answer: 42
        EOF
        # Generate age identity and capture public recipient key
        AGE_OUTPUT="$(age-keygen 2>&1)"
        echo "$AGE_OUTPUT" > identity.txt
        RECIPIENT=$(echo "$AGE_OUTPUT" | sed -n 's/^# public key: //p')
        if [ -z "$RECIPIENT" ]; then
          echo "Failed to extract age recipient public key" >&2
          exit 1
        fi
        echo "recipient=$RECIPIENT" >> $GITHUB_OUTPUT
        echo "identity=$(echo "$AGE_OUTPUT" | grep '^AGE-SECRET-KEY')" >> $GITHUB_OUTPUT
    - name: Upload encrypted artifact (age)
      id: enc
      uses: ./upload-encrypted-artifact
      with:
        artifact_name: test-artifact
        paths: plain.txt
        recipient: ${{ steps.age-keys.outputs.recipient }}
    - name: Decrypt encrypted artifact (age)
      uses: ./download-encrypted-artifact
      with:
        artifact_name: test-artifact
        out_dir: download
        identity: ${{ steps.age-keys.outputs.identity }}
    - name: list decrypted files
      run: ls -l download
    - name: Verify decrypted equals original
      run: diff -u plain.txt download/plain.txt

  check-workflow-status:
    runs-on: kubernetes-runner
    permissions:
      contents: read
      actions: read
    steps:
    - name: Check Workflow Status
      id: check-workflow-status
      uses: eidp/actions-common/check-workflow-status@c82f876676a8803eb3398de4c508516d0d00a3cc # v0
      with:
        jobs: 'plan / terraform-plan,verify-plan,apply / terraform-apply,verify-apply,test-encrypted-artifact-upload-download'
        github-token: ${{ secrets.GITHUB_TOKEN }}
