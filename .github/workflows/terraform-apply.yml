name: Terraform Apply

on:
  workflow_call:
    inputs:
      directory:
        description: >
          Path to the directory containing Terraform configuration.
          Defaults to ./terraform.
        required: false
        type: string
        default: "./terraform"

      terraform_version:
        description: >
          The version of Terraform to install and use.
        required: false
        type: string
        default: "1.12.2"

      extra_init_args:
        description: >
          Extra arguments to pass to the 'terraform init' command.
        required: false
        type: string
        default: "-lockfile=readonly"

      extra_args:
        description: >
          Extra arguments to pass to the 'terraform plan' and 'terraform apply' commands. 
          Useful for (dynamically) injecting variable files or flags.
        required: false
        type: string
        default: ""

      environment:
        description: >
          The environment to use for the Terraform apply step.
          This can be used to set up extra approval before applying changes.
        required: false
        type: string
        default: "github"

    secrets:
      AWS_ACCESS_KEY_ID:
        description: >
          AWS access key for authenticating with Terraform providers.
        required: true

      AWS_SECRET_ACCESS_KEY:
        description: >
          AWS secret key for authenticating with Terraform providers.
        required: true

      GITHUB_APP_ID:
        description: >
          GitHub App ID used by Terraform to authenticate with the GitHub API and for commenting on PRs.
        required: true

      GITHUB_APP_PEM_FILE:
        description: >
          GitHub App private key (PEM format) used by Terraform to authenticate with the GitHub API and for commenting on PRs.
        required: true

      GITHUB_APP_INSTALLATION_ID:
        description: >
          GitHub App Installation ID used by Terraform to authenticate with the GitHub API and for commenting on PRs.
        required: true
    outputs:
      apply_outcome:
        description: |
          The status of the Terraform apply step, which can be used to determine if the apply was successful or not.
        value: ${{ jobs.apply.outputs.apply_outcome }}
      apply_output:
        description: |
          The output of the Terraform apply step.
        value: ${{ jobs.apply.outputs.apply_output }}

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_APP_ID: ${{ secrets.GITHUB_APP_ID }}
  GITHUB_APP_INSTALLATION_ID: ${{ secrets.GITHUB_APP_INSTALLATION_ID }}
  GITHUB_APP_PEM_FILE: ${{ secrets.GITHUB_APP_PEM_FILE }}

jobs:
  plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.directory }}

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - name: Terraform Init
      id: init
      run: terraform init ${{ inputs.extra_init_args }} -input=false

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -no-color ${{ inputs.extra_args }} -out=tfplan && terraform show -no-color tfplan

    - name: Upload plan artifact
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: ${{ inputs.directory }}/tfplan

  apply:
    needs: [plan]
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    outputs:
      apply_outcome: ${{ steps.apply.outcome }}
      apply_output: ${{ steps.apply.outputs.stdout }}
    # TODO enable once we have an enterprise account
    #    environment: ${{ inputs.environment }}
    #    concurrency: ${{ inputs.environment }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.directory }}

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - name: Terraform Init
      id: init
      run: terraform init -lockfile=readonly -input=false

    - name: Download plan artifact
      uses: actions/download-artifact@v4
      with:
        name: tfplan
        path: ${{ inputs.directory }}

    - name: Terraform Apply
      id: apply
      run: terraform apply ${{ inputs.extra_args }} -auto-approve -input=false -no-color tfplan
