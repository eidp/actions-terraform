name: upload-encrypted-artifact
description: |
  This action creates an encrypted artifact.

  This action archives the provided paths into a file named `archive.tar`, encrypts it producing `archive.tar.bin`, and uploads the encrypted file as an artifact.
  - Cipher: OpenSSL symmetric cipher (default: aes-256-cbc)
  - KDF: pbkdf2 with salt (OpenSSL default for `-pbkdf2 -salt`)

  Important:
  - Do NOT echo the passphrase (key). Keep it only in GitHub secrets.
  - Use the matching `download-encrypted-artifact` action to download, decrypt, and extract (untar) the archive in consumer workflows.

author: eidp
branding:
  icon: lock
  color: purple
inputs:
  directory:
    description: >
      Directory to run the action in. Defaults to the current working directory.
      If provided, the action will change to this directory before creating the archive.
      This is where the archive will be created and encrypted.
    required: false
    default: ''
  paths:
    description: >
      Space-separated list of files/directories to include in the archive. Globs are supported by the shell.
    required: true
  key:
    description: Passphrase to use for encryption (store as a secret in your workflow).
    required: true
  cipher:
    description: OpenSSL cipher to use for encryption.
    required: false
    default: aes-256-cbc
  artifact_name:
    description: Name of the artifact to upload.
    required: false
    default: encrypted-artifact
runs:
  using: composite
  steps:
  - id: bundle-and-encrypt
    shell: bash
    run: |
      set -euo pipefail
      : "${{ inputs.paths }}"
      : "${{ inputs.key }}"
      CIPHER="${{ inputs.cipher }}"; if [ -z "${CIPHER}" ]; then CIPHER=aes-256-cbc; fi

      if [ -z "${{ inputs.directory }}" ]; then
          WORKDIR="$(pwd)"
      else
          WORKDIR="${{ inputs.directory }}"
      fi
      cd "$WORKDIR"
      
      # Create archive.tar
      rm -f archive.tar archive.tar.bin
      # Use tar with recursion; expand the provided paths via the shell
      # shellcheck disable=SC2086
      # Safely split paths into an array to prevent code injection
      read -r -a PATHS_ARRAY <<< "${{ inputs.paths }}"
      tar --exclude=archive.tar --exclude=archive.tar.bin -cf archive.tar "${PATHS_ARRAY[@]}"

      # Encrypt archive.tar -> archive.tar.bin
      openssl enc -"$CIPHER" -pbkdf2 -salt -pass pass:"${{ inputs.key }}" -in archive.tar -out archive.tar.bin

      echo "Created and encrypted archive: $(pwd)/archive.tar.bin"

  - name: Upload encrypted archive artifact
    uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
    with:
      name: ${{ inputs.artifact_name }}
      path: archive.tar.bin
      if-no-files-found: error
outputs: {}
